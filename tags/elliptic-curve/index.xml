<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Elliptic-Curve on HandsLog</title><link>https://handsupmin.github.io/tags/elliptic-curve/</link><description>Recent content in Elliptic-Curve on HandsLog</description><generator>Hugo -- 0.146.0</generator><language>ko-kr</language><lastBuildDate>Mon, 29 Sep 2025 13:10:22 +0000</lastBuildDate><atom:link href="https://handsupmin.github.io/tags/elliptic-curve/index.xml" rel="self" type="application/rss+xml"/><item><title>영지식 증명 ZKP의 개념과 동작 원리, 디지털 서명과의 차이</title><link>https://handsupmin.github.io/posts/zkp-concepts-and-how-it-works-vs-digital-signatures-1338b0/</link><pubDate>Mon, 29 Sep 2025 13:10:22 +0000</pubDate><guid>https://handsupmin.github.io/posts/zkp-concepts-and-how-it-works-vs-digital-signatures-1338b0/</guid><description>&lt;h3 id="개요">개요&lt;/h3>
&lt;p>영지식 증명은 어떤 명제가 참임을 설득하면서도 그 명제의 근거가 되는 비밀 자체는 끝까지 드러내지 않는 암호학적 절차를 의미함
블록체인과 프라이버시 보존 컴퓨팅에서 필수 도구로 자리 잡았으며, 범용 컴퓨팅에 대한 검증을 작은 증명으로 압축하는 현대 프로토콜의 기초로 쓰임
이 글은 기본 개념과 직관, 수학적 성질, 대화형과 비대화형의 차이, 디지털 서명과의 구분점, 이산로그 기반 간단 프로토콜의 구조까지 한 번에 정리함&lt;/p>
&lt;h3 id="목적과-맥락">목적과 맥락&lt;/h3>
&lt;ul>
&lt;li>비밀을 공개하지 않고 유효성만 검증하고 싶은 요구 증가&lt;/li>
&lt;li>퍼블릭 블록체인에서 데이터 공개 없이 정합성을 보장하려는 니즈 확대&lt;/li>
&lt;li>오프체인 연산을 온체인에 작은 증명으로 제출해 확장성과 비용을 개선하려는 동기 존재&lt;/li>
&lt;/ul>
&lt;h3 id="핵심-개념과-정의">핵심 개념과 정의&lt;/h3>
&lt;ul>
&lt;li>Prover 비밀을 가진 참여자, 비밀을 공개하지 않고 명제의 참을 설득하려는 주체&lt;/li>
&lt;li>Verifier 검증하는 참여자, Prover가 비밀을 가진 사실 또는 명제가 참이라는 사실만 확인하고 싶음&lt;/li>
&lt;li>Witness 또는 Secret 명제의 참을 뒷받침하는 비밀 값 또는 비밀 지식&lt;/li>
&lt;li>Statement 공개 가능한 명제 표현, 예시로 y = g^x mod p에서 x를 알고 있음을 증명하는 형태&lt;/li>
&lt;li>Challenge 검증자가 무작위 도전값을 제시하는 단계, 사기 가능성을 줄이고 사운드니스를 높이는 역할&lt;/li>
&lt;li>Transcript 또는 View 대화형 상호작용의 기록, 시뮬레이터가 동일 분포로 재현 가능해야 영지식 성질이 성립함&lt;/li>
&lt;/ul>
&lt;h3 id="영지식-증명의-세-가지-성질">영지식 증명의 세 가지 성질&lt;/h3>
&lt;ul>
&lt;li>완전성 Completeness 정직한 Prover가 비밀을 가지고 있다면 정직한 Verifier는 높은 확률로 설득됨&lt;/li>
&lt;li>건전성 Soundness 비밀이 없으면 Prover가 Verifier를 속일 확률이 매우 낮음, 반복과 큰 도전 공간으로 확률을 지수적으로 낮춤&lt;/li>
&lt;li>영지식성 Zero-Knowledge Verifier는 명제가 참이라는 것 외 어떠한 추가 정보도 얻지 못함, 시뮬레이터가 실제 대화 기록과 식별 불가능한 트랜스크립트를 생성 가능해야 함&lt;/li>
&lt;/ul>
&lt;h3 id="직관적-예시-알리바바-동굴">직관적 예시 알리바바 동굴&lt;/h3>
&lt;p>A와 B 두 갈래가 있고 가운데 문이 막혀 있다고 가정
문을 여는 주문이 비밀, 주문을 알면 어느 쪽으로 들어가도 반대편으로 나올 수 있음
검증자는 Prover가 동굴에 들어간 뒤 무작위로 A 또는 B로 나오라고 요구함
Prover가 주문을 모르면 자신이 들어간 쪽과 같은 쪽을 요구받을 때만 성공 가능, 성공 확률 1/2에 불과함
이 과정을 k회 반복하면 거짓말로 모두 통과할 확률은 1/2^k로 감소함
검증자는 주문의 구체 내용은 전혀 알 수 없고, Prover가 주문을 안다는 사실만 높은 확률로 확신 가능함&lt;/p></description></item></channel></rss>