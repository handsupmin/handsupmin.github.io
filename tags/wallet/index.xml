<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Wallet on HandsLog</title><link>https://handsupmin.github.io/tags/wallet/</link><description>Recent content in Wallet on HandsLog</description><generator>Hugo -- 0.146.0</generator><language>ko-kr</language><lastBuildDate>Thu, 02 Oct 2025 13:07:56 +0000</lastBuildDate><atom:link href="https://handsupmin.github.io/tags/wallet/index.xml" rel="self" type="application/rss+xml"/><item><title>Viem으로 이더리움 읽기·쓰기 시작하기 가이드</title><link>https://handsupmin.github.io/posts/viem-ethereum-read-write-guide-4a5336/</link><pubDate>Thu, 02 Oct 2025 13:07:56 +0000</pubDate><guid>https://handsupmin.github.io/posts/viem-ethereum-read-write-guide-4a5336/</guid><description>&lt;h3 id="개요">개요&lt;/h3>
&lt;p>Viem은 이더리움 계열 체인과 상호작용하는 경량 Web3 클라이언트 라이브러리임
ethers나 web3.js와 같은 범용 라이브러리와 동일한 범주의 도구지만, 모듈 분리 구조와 타입 안전성, 빌드 사이즈, 성능에서 강점이 있음
프로덕션에서 자주 필요한 읽기와 쓰기 흐름을 중심으로, 설치부터 블록 조회, 컨트랙트 읽기, 컨트랙트 쓰기까지의 필수 개념과 실용 팁 정리&lt;/p>
&lt;h3 id="핵심-개념과-정의">핵심 개념과 정의&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>Public Client&lt;/p>
&lt;ul>
&lt;li>퍼블릭 RPC를 통해 체인 데이터 읽기 전용 호출 수행하는 클라이언트&lt;/li>
&lt;li>블록, 트랜잭션, 로그 조회, read-only 컨트랙트 호출 담당&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Wallet Client&lt;/p></description></item><item><title>커스토디얼 vs 논커스토디얼 월렛 비교</title><link>https://handsupmin.github.io/posts/custodial-vs-noncustodial-wallets-274b74/</link><pubDate>Tue, 23 Sep 2025 13:09:26 +0000</pubDate><guid>https://handsupmin.github.io/posts/custodial-vs-noncustodial-wallets-274b74/</guid><description>&lt;h3 id="개요">개요&lt;/h3>
&lt;p>프라이빗키 관리 방식에 따라 암호화폐 월렛은 &lt;strong>커스토디얼(custodial)&lt;/strong> 과 &lt;strong>논커스토디얼(noncustodial)&lt;/strong> 로 구분됨
각 방식의 차이와 선택 기준, 보안·운영 리스크와 대응 방안을 &lt;strong>초보자도 이해할 수 있게&lt;/strong> 정리하면서 &lt;strong>실무자가 바로 적용할 수 있는 체크리스트&lt;/strong>까지 제시함&lt;/p>
&lt;hr>
&lt;h3 id="핵심-개념">핵심 개념&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>커스토디얼 월렛&lt;/strong>
제3자 서비스가 사용자의 프라이빗키를 보관하고 서명을 대행하는 구조
로그인·출금 등은 서비스 인증 절차를 거쳐 처리됨&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>논커스토디얼 월렛&lt;/strong>
사용자가 프라이빗키를 직접 보유·관리하는 구조
브라우저 확장 지갑·모바일 앱 지갑·하드웨어 지갑이 대표적 사례임&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>핵심 차이 한 줄 정리&lt;/strong>
키의 &lt;strong>소유·통제 주체&lt;/strong>가 제3자인가 사용자 본인인가의 차이&lt;/p></description></item><item><title>NFT란? NFT 핵심 개념 정리</title><link>https://handsupmin.github.io/posts/nft-concept-20gd0fl/</link><pubDate>Sat, 20 Sep 2025 16:41:07 +0000</pubDate><guid>https://handsupmin.github.io/posts/nft-concept-20gd0fl/</guid><description>&lt;h3 id="서문">서문&lt;/h3>
&lt;p>NFT는 몇 년 새 대중의 관심을 받았지만 개념과 절차가 분산돼 있어 입문자가 막히기 쉬움
이 글은 &lt;strong>실무자 관점&lt;/strong>에서 NFT의 핵심 개념을 단계적으로 정리하고 &lt;strong>구매·발행·보관 시 유의사항&lt;/strong>과 &lt;strong>운영 관행&lt;/strong>을 담는 것을 목표로 함&lt;/p>
&lt;hr>
&lt;h3 id="개념과-배경">개념과 배경&lt;/h3>
&lt;p>NFT는 Non‑Fungible Token의 약자이며 대체 불가능한 토큰을 의미함
동일 단위끼리 교환 가능한 자산은 펀저블 토큰이라 부르고 NFT는 각 토큰이 &lt;strong>고유 식별자와 속성&lt;/strong>을 가져 상호 교환 시 동일 가치를 보장하지 않음
블록체인에 기록된 소유권은 변경이 어렵고 거래 이력이 투명하게 남는다는 장점이 있음
온체인 소유권이 &lt;strong>저작권·초상권 등 법적 권리와 자동 동치가 아님&lt;/strong>에 유의해야 함&lt;/p></description></item></channel></rss>