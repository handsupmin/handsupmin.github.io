<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Security on HandsLog</title><link>https://handsupmin.github.io/tags/security/</link><description>Recent content in Security on HandsLog</description><generator>Hugo -- 0.146.0</generator><language>ko-kr</language><lastBuildDate>Mon, 29 Sep 2025 13:10:22 +0000</lastBuildDate><atom:link href="https://handsupmin.github.io/tags/security/index.xml" rel="self" type="application/rss+xml"/><item><title>영지식 증명 ZKP의 개념과 동작 원리, 디지털 서명과의 차이</title><link>https://handsupmin.github.io/posts/zkp-concepts-and-how-it-works-vs-digital-signatures-1338b0/</link><pubDate>Mon, 29 Sep 2025 13:10:22 +0000</pubDate><guid>https://handsupmin.github.io/posts/zkp-concepts-and-how-it-works-vs-digital-signatures-1338b0/</guid><description>&lt;h3 id="개요">개요&lt;/h3>
&lt;p>영지식 증명은 어떤 명제가 참임을 설득하면서도 그 명제의 근거가 되는 비밀 자체는 끝까지 드러내지 않는 암호학적 절차를 의미함
블록체인과 프라이버시 보존 컴퓨팅에서 필수 도구로 자리 잡았으며, 범용 컴퓨팅에 대한 검증을 작은 증명으로 압축하는 현대 프로토콜의 기초로 쓰임
이 글은 기본 개념과 직관, 수학적 성질, 대화형과 비대화형의 차이, 디지털 서명과의 구분점, 이산로그 기반 간단 프로토콜의 구조까지 한 번에 정리함&lt;/p>
&lt;h3 id="목적과-맥락">목적과 맥락&lt;/h3>
&lt;ul>
&lt;li>비밀을 공개하지 않고 유효성만 검증하고 싶은 요구 증가&lt;/li>
&lt;li>퍼블릭 블록체인에서 데이터 공개 없이 정합성을 보장하려는 니즈 확대&lt;/li>
&lt;li>오프체인 연산을 온체인에 작은 증명으로 제출해 확장성과 비용을 개선하려는 동기 존재&lt;/li>
&lt;/ul>
&lt;h3 id="핵심-개념과-정의">핵심 개념과 정의&lt;/h3>
&lt;ul>
&lt;li>Prover 비밀을 가진 참여자, 비밀을 공개하지 않고 명제의 참을 설득하려는 주체&lt;/li>
&lt;li>Verifier 검증하는 참여자, Prover가 비밀을 가진 사실 또는 명제가 참이라는 사실만 확인하고 싶음&lt;/li>
&lt;li>Witness 또는 Secret 명제의 참을 뒷받침하는 비밀 값 또는 비밀 지식&lt;/li>
&lt;li>Statement 공개 가능한 명제 표현, 예시로 y = g^x mod p에서 x를 알고 있음을 증명하는 형태&lt;/li>
&lt;li>Challenge 검증자가 무작위 도전값을 제시하는 단계, 사기 가능성을 줄이고 사운드니스를 높이는 역할&lt;/li>
&lt;li>Transcript 또는 View 대화형 상호작용의 기록, 시뮬레이터가 동일 분포로 재현 가능해야 영지식 성질이 성립함&lt;/li>
&lt;/ul>
&lt;h3 id="영지식-증명의-세-가지-성질">영지식 증명의 세 가지 성질&lt;/h3>
&lt;ul>
&lt;li>완전성 Completeness 정직한 Prover가 비밀을 가지고 있다면 정직한 Verifier는 높은 확률로 설득됨&lt;/li>
&lt;li>건전성 Soundness 비밀이 없으면 Prover가 Verifier를 속일 확률이 매우 낮음, 반복과 큰 도전 공간으로 확률을 지수적으로 낮춤&lt;/li>
&lt;li>영지식성 Zero-Knowledge Verifier는 명제가 참이라는 것 외 어떠한 추가 정보도 얻지 못함, 시뮬레이터가 실제 대화 기록과 식별 불가능한 트랜스크립트를 생성 가능해야 함&lt;/li>
&lt;/ul>
&lt;h3 id="직관적-예시-알리바바-동굴">직관적 예시 알리바바 동굴&lt;/h3>
&lt;p>A와 B 두 갈래가 있고 가운데 문이 막혀 있다고 가정
문을 여는 주문이 비밀, 주문을 알면 어느 쪽으로 들어가도 반대편으로 나올 수 있음
검증자는 Prover가 동굴에 들어간 뒤 무작위로 A 또는 B로 나오라고 요구함
Prover가 주문을 모르면 자신이 들어간 쪽과 같은 쪽을 요구받을 때만 성공 가능, 성공 확률 1/2에 불과함
이 과정을 k회 반복하면 거짓말로 모두 통과할 확률은 1/2^k로 감소함
검증자는 주문의 구체 내용은 전혀 알 수 없고, Prover가 주문을 안다는 사실만 높은 확률로 확신 가능함&lt;/p></description></item><item><title>블록체인 오라클 개념, 유형, 동작 원리와 실무 가이드</title><link>https://handsupmin.github.io/posts/blockchain-oracle-guide-91a3d2/</link><pubDate>Sat, 27 Sep 2025 13:05:51 +0000</pubDate><guid>https://handsupmin.github.io/posts/blockchain-oracle-guide-91a3d2/</guid><description>&lt;h3 id="개념과-배경">개념과 배경&lt;/h3>
&lt;p>스마트 컨트랙트는 체인 내부 상태만 신뢰하고 외부 네트워크에 직접 접근하지 않음
가격 정보나 날씨, 게임 결과 같은 외부 데이터를 참조하려면 중간자 역할이 필요함
오라클은 외부 데이터를 온체인으로 들여오거나 온체인 이벤트를 외부 시스템에 전달하는 인터페이스 역할 수행
이 연결이 제대로 설계되지 않으면 스마트 컨트랙트의 무결성이 오라클 신뢰도에 종속되는 구조적 한계 발생&lt;/p>
&lt;h3 id="핵심-개념과-정의">핵심 개념과 정의&lt;/h3>
&lt;p>오라클 정의 블록체인과 외부 세계 간 데이터 브리지
인바운드 오라클 외부 데이터를 온체인으로 주입
아웃바운드 오라클 온체인 이벤트를 외부 서비스나 장치로 전달
중앙화 오라클 단일 주체가 데이터 제공 간단하고 빠르나 단일 실패 지점과 조작 리스크 존재
탈중앙화 오라클 다수 노드와 다중 소스 집계 신뢰성과 가용성 강화 대신 비용과 설계 복잡도 상승
소프트웨어 오라클 API 기반 웹 데이터 공급
하드웨어 오라클 센서·IoT 장치에서 물리 정보 수집
오라클 문제 체인은 합의로 안전하지만 외부 세계의 진실성은 합의 밖에 있음 신뢰 경계가 오라클로 이동하는 문제를 어떻게 통제할지의 과제&lt;/p></description></item><item><title>커스토디얼 vs 논커스토디얼 월렛 비교</title><link>https://handsupmin.github.io/posts/custodial-vs-noncustodial-wallets-274b74/</link><pubDate>Tue, 23 Sep 2025 13:09:26 +0000</pubDate><guid>https://handsupmin.github.io/posts/custodial-vs-noncustodial-wallets-274b74/</guid><description>&lt;h3 id="개요">개요&lt;/h3>
&lt;p>프라이빗키 관리 방식에 따라 암호화폐 월렛은 &lt;strong>커스토디얼(custodial)&lt;/strong> 과 &lt;strong>논커스토디얼(noncustodial)&lt;/strong> 로 구분됨
각 방식의 차이와 선택 기준, 보안·운영 리스크와 대응 방안을 &lt;strong>초보자도 이해할 수 있게&lt;/strong> 정리하면서 &lt;strong>실무자가 바로 적용할 수 있는 체크리스트&lt;/strong>까지 제시함&lt;/p>
&lt;hr>
&lt;h3 id="핵심-개념">핵심 개념&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>커스토디얼 월렛&lt;/strong>
제3자 서비스가 사용자의 프라이빗키를 보관하고 서명을 대행하는 구조
로그인·출금 등은 서비스 인증 절차를 거쳐 처리됨&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>논커스토디얼 월렛&lt;/strong>
사용자가 프라이빗키를 직접 보유·관리하는 구조
브라우저 확장 지갑·모바일 앱 지갑·하드웨어 지갑이 대표적 사례임&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>핵심 차이 한 줄 정리&lt;/strong>
키의 &lt;strong>소유·통제 주체&lt;/strong>가 제3자인가 사용자 본인인가의 차이&lt;/p></description></item></channel></rss>