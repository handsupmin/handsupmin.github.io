<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Eip-712 on HandsLog</title><link>https://handsupmin.github.io/tags/eip-712/</link><description>Recent content in Eip-712 on HandsLog</description><generator>Hugo -- 0.146.0</generator><language>ko-kr</language><lastBuildDate>Wed, 08 Oct 2025 13:10:01 +0000</lastBuildDate><atom:link href="https://handsupmin.github.io/tags/eip-712/index.xml" rel="self" type="application/rss+xml"/><item><title>Ramper에서 EIP-712 서명 우회하기: signMessage로 대체</title><link>https://handsupmin.github.io/posts/ramper-eip-712-signmessage-workaround-8bbbd6/</link><pubDate>Wed, 08 Oct 2025 13:10:01 +0000</pubDate><guid>https://handsupmin.github.io/posts/ramper-eip-712-signmessage-workaround-8bbbd6/</guid><description>&lt;h3 id="개념배경">개념/배경&lt;/h3>
&lt;p>일부 환경에서 signTypedData 호출이 막히거나 동작 불안정한 경우 있음
EIP-712는 결국 0x1901 + 도메인 해시 + 구조체 해시를 keccak256 한 다이제스트를 ECDSA로 서명하는 절차임
핵심은 동일 다이제스트를 만들고 프리픽스 없이 서명하는지 확인하는 것임&lt;/p>
&lt;h3 id="접근">접근&lt;/h3>
&lt;p>viem의 hashTypedData로 EIP-712 다이제스트 생성 후 Ramper의 signMessage로 바이트 서명 시도
signMessage가 raw 바이트 서명을 지원해야 personal_sign 접두어가 붙지 않음&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-ts" data-lang="ts">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">import&lt;/span> { &lt;span style="color:#a6e22e">hashTypedData&lt;/span> } &lt;span style="color:#66d9ef">from&lt;/span> &lt;span style="color:#e6db74">&amp;#39;viem&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#a6e22e">digest&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">hashTypedData&lt;/span>({ &lt;span style="color:#a6e22e">domain&lt;/span>, &lt;span style="color:#a6e22e">types&lt;/span>, &lt;span style="color:#a6e22e">primaryType&lt;/span>, &lt;span style="color:#a6e22e">message&lt;/span> })
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#a6e22e">sig&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">await&lt;/span> &lt;span style="color:#a6e22e">wallet&lt;/span>.&lt;span style="color:#a6e22e">signMessage&lt;/span>({ &lt;span style="color:#a6e22e">message&lt;/span>&lt;span style="color:#f92672">:&lt;/span> { &lt;span style="color:#a6e22e">raw&lt;/span>: &lt;span style="color:#66d9ef">digest&lt;/span> } })
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="주의">주의&lt;/h3>
&lt;p>signMessage가 personal_sign 방식이면 &amp;ldquo;\x19Ethereum Signed Message\n32&amp;rdquo; 접두어가 추가됨
이 경우 검증도 동일 접두어 포함 다이제스트로 진행 필요
스마트 계정은 EIP-1271 규약으로 검증 필요
도메인과 타입 정의의 일관성 유지, 체인 ID와 verifyingContract 변경 시 도메인 해시 불일치 위험 있음&lt;/p></description></item><item><title>오프체인 서명 검증(Off-chain Signature Verification)이란?</title><link>https://handsupmin.github.io/posts/off-chain-signature-verification-542a33/</link><pubDate>Sun, 21 Sep 2025 03:11:23 +0000</pubDate><guid>https://handsupmin.github.io/posts/off-chain-signature-verification-542a33/</guid><description>&lt;h2 id="개요">개요&lt;/h2>
&lt;p>블록체인 기술에서 모든 것을 온체인(On-chain)으로 처리하는 것은 비효율적이거나 불가능한 경우가 많음
이때 &lt;strong>오프체인 서명 검증&lt;/strong>(Off-chain Signature Verification)은 오프체인(서버)의 유연성과 온체인(컨트랙트)의 신뢰성을 결합하는 강력한 해결책이 됨&lt;/p>
&lt;p>쉽게 비유하자면, 클럽 매니저(서버)가 VIP 손님(사용자)에게만 특별한 싸인이 담긴 입장권(서명)을 발급하고, 입구의 가드(스마트 컨트랙트)는 그 싸인만 확인하고 들여보내는 것과 같음
가드는 매번 매니저에게 연락할 필요 없이, 위조되지 않은 싸인인지 확인만 하면 됨&lt;/p>
&lt;p>이 글에서는 오프체인 서명 검증이 무엇인지, 어떤 용어들이 사용되는지, 그리고 가장 중요하게는 어떤 원리로 동작하는지 상세히 알아봄&lt;/p></description></item><item><title>안전한 가스비 대납을 위한 오프체인 서명 검증 페이마스터 (in ZkSync Era)</title><link>https://handsupmin.github.io/posts/zksync-era-paymaster-off-chain-signature-verification-274b74/</link><pubDate>Sun, 21 Sep 2025 02:14:08 +0000</pubDate><guid>https://handsupmin.github.io/posts/zksync-era-paymaster-off-chain-signature-verification-274b74/</guid><description>&lt;h2 id="개요">개요&lt;/h2>
&lt;p>블록체인 서비스에서 사용자가 겪는 가장 큰 장벽 중 하나는 단연 &lt;strong>가스비&lt;/strong>(Gas Fee)임
아무리 좋은 서비스를 만들어도, 사용자가 지갑에 가스비로 쓸 코인(ETH 등)을 보유하고 있어야 한다는 점은 대중화를 가로막는 결정적인 요인임
이 문제를 해결해 사용자가 가스비 걱정 없이 서비스 핵심 가치에만 집중하게 만드는 것, 즉 &lt;strong>가스리스 트랜잭션&lt;/strong>(Gasless Transaction)을 구현하는 것이 이번 개발의 최종 목표였음&lt;/p>
&lt;p>zkSync Era는 이를 위해 &lt;strong>페이마스터&lt;/strong>(Paymaster)라는 강력한 시스템을 제공함. 페이마스터는 서비스 제공자 같은 제3자가 사용자를 대신해 트랜잭션 수수료를 지불할 수 있게 해주는 스마트 컨트랙트임&lt;/p></description></item></channel></rss>