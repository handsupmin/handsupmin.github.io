<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Backend on HandsLog</title>
    <link>https://handsupmin.github.io/categories/backend/</link>
    <description>Recent content in Backend on HandsLog</description>
    <generator>Hugo -- 0.146.0</generator>
    <language>ko-kr</language>
    <lastBuildDate>Sat, 25 Oct 2025 13:06:24 +0000</lastBuildDate>
    <atom:link href="https://handsupmin.github.io/categories/backend/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>SSE 기반 실시간 알림 아키텍처 설계 NestJS &#43; Redis Pub/Sub</title>
      <link>https://handsupmin.github.io/posts/sse-realtime-notification-architecture-nestjs-redis-pub-sub-f4346d/</link>
      <pubDate>Sat, 25 Oct 2025 13:06:24 +0000</pubDate>
      <guid>https://handsupmin.github.io/posts/sse-realtime-notification-architecture-nestjs-redis-pub-sub-f4346d/</guid>
      <description>&lt;h2 id=&#34;sse-기반-실시간-알림-설계서-nestjs--redis-pubsub&#34;&gt;SSE 기반 실시간 알림 설계서 NestJS + Redis Pub/Sub&lt;/h2&gt;
&lt;h3 id=&#34;목적&#34;&gt;목적&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;QR 이벤트 보상 알림과 채팅 등 다양한 도메인의 서버→클라이언트 실시간 전달을 표준 HTTP 기반인 SSE로 단일 파이프라인에서 처리함&lt;/li&gt;
&lt;li&gt;Kubernetes 다중 인스턴스 환경에서도 단순하고 견고하게 동작하도록 Redis Pub/Sub를 브로커로 채택함&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;대상-독자&#34;&gt;대상 독자&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;초보 백엔드 대상 SSE와 Pub/Sub의 개념, 동작 방식, 최소 구현 흐름 정리&lt;/li&gt;
&lt;li&gt;시니어 백엔드 대상 채널·이벤트 모델, 커넥션 레지스트리, 운영 지표와 신뢰성 포지션, 트레이드오프 명확화&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;1-개념-요약&#34;&gt;1) 개념 요약&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;SSE Server‑Sent Events&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
