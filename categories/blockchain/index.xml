<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Blockchain on HandsLog</title><link>https://handsupmin.github.io/categories/blockchain/</link><description>Recent content in Blockchain on HandsLog</description><generator>Hugo -- 0.146.0</generator><language>ko-kr</language><lastBuildDate>Wed, 24 Sep 2025 13:09:24 +0000</lastBuildDate><atom:link href="https://handsupmin.github.io/categories/blockchain/index.xml" rel="self" type="application/rss+xml"/><item><title>Abstract 체인이란? zkRollup 기반 L2 체인 구조와 핵심 컴포넌트 정리</title><link>https://handsupmin.github.io/posts/abstract-chain-overview-274b74/</link><pubDate>Wed, 24 Sep 2025 13:09:24 +0000</pubDate><guid>https://handsupmin.github.io/posts/abstract-chain-overview-274b74/</guid><description>&lt;h3 id="개요">개요&lt;/h3>
&lt;p>이 글은 ‘Abstract’로 지칭되는 &lt;strong>ZK Rollup 기반 L2 체인&lt;/strong>의 구조와 핵심 컴포넌트를 &lt;strong>실무 관점&lt;/strong>에서 정리함
목표는 &lt;strong>트랜잭션 흐름&lt;/strong>, &lt;strong>증명 생성·검증 파이프라인&lt;/strong>, &lt;strong>데이터 가용성(DA)&lt;/strong>, &lt;strong>네이티브 계정 추상화(AA)&lt;/strong>, &lt;strong>스마트 컨트랙트 지갑&lt;/strong>의 동작 방식과 &lt;strong>운영·보안·성능 관점의 실무 포인트&lt;/strong>를 초보자도 이해할 수 있게 설명하면서, 전문가가 보아도 무리가 없도록 &lt;strong>정확성&lt;/strong>을 보강하는 것&lt;/p>
&lt;blockquote>
&lt;p>주의: 본 문서는 &lt;strong>일반적인 ZK Rollup 아키텍처&lt;/strong>를 기준으로 설명함. 체인/스택별 명칭과 세부 동작(예: 함수명, 회로 구성, 수수료 정책)은 다를 수 있으므로 &lt;strong>구현체 문서&lt;/strong>를 병행 참고 필요&lt;/p></description></item><item><title>커스토디얼 vs 논커스토디얼 월렛 비교</title><link>https://handsupmin.github.io/posts/custodial-vs-noncustodial-wallets-274b74/</link><pubDate>Tue, 23 Sep 2025 13:09:26 +0000</pubDate><guid>https://handsupmin.github.io/posts/custodial-vs-noncustodial-wallets-274b74/</guid><description>&lt;h3 id="개요">개요&lt;/h3>
&lt;p>프라이빗키 관리 방식에 따라 암호화폐 월렛은 &lt;strong>커스토디얼(custodial)&lt;/strong> 과 &lt;strong>논커스토디얼(noncustodial)&lt;/strong> 로 구분됨
각 방식의 차이와 선택 기준, 보안·운영 리스크와 대응 방안을 &lt;strong>초보자도 이해할 수 있게&lt;/strong> 정리하면서 &lt;strong>실무자가 바로 적용할 수 있는 체크리스트&lt;/strong>까지 제시함&lt;/p>
&lt;hr>
&lt;h3 id="핵심-개념">핵심 개념&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>커스토디얼 월렛&lt;/strong>
제3자 서비스가 사용자의 프라이빗키를 보관하고 서명을 대행하는 구조
로그인·출금 등은 서비스 인증 절차를 거쳐 처리됨&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>논커스토디얼 월렛&lt;/strong>
사용자가 프라이빗키를 직접 보유·관리하는 구조
브라우저 확장 지갑·모바일 앱 지갑·하드웨어 지갑이 대표적 사례임&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>핵심 차이 한 줄 정리&lt;/strong>
키의 &lt;strong>소유·통제 주체&lt;/strong>가 제3자인가 사용자 본인인가의 차이&lt;/p></description></item><item><title>블록체인이란? 블록체인 개념 총정리</title><link>https://handsupmin.github.io/posts/blockchain-principles-mining-hash-274b74/</link><pubDate>Mon, 22 Sep 2025 13:10:11 +0000</pubDate><guid>https://handsupmin.github.io/posts/blockchain-principles-mining-hash-274b74/</guid><description>&lt;h2 id="개요">개요&lt;/h2>
&lt;p>블록체인은 &lt;strong>중앙 기관 없이&lt;/strong> 참여자들이 거래를 기록·검증·공유하는 &lt;strong>분산 원장&lt;/strong> 기술임
이 글은 블록체인을 &lt;strong>초보자 친화적으로&lt;/strong> 설명하고, &lt;strong>실무 체크리스트&lt;/strong>까지 정리함&lt;/p>
&lt;hr>
&lt;h2 id="큰-그림-시스템-구성">큰 그림: 시스템 구성&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>노드(Node)&lt;/strong>: 블록체인 소프트웨어 실행 주체&lt;/p>
&lt;ul>
&lt;li>&lt;strong>풀노드&lt;/strong>: 모든 블록·트랜잭션 검증·저장&lt;/li>
&lt;li>&lt;strong>라이트 클라이언트&lt;/strong>: 헤더·머클 증명 기반 최소 검증&lt;/li>
&lt;li>(참고) &lt;strong>아카이브 노드&lt;/strong>: 오래된 상태 포함 전체 상태 유지(필수 아님)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>블록(Block)&lt;/strong>: 트랜잭션 묶음 + 메타데이터(블록헤더). 블록들이 선형 체인으로 연결됨&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>합의(Consensus)&lt;/strong>: 어떤 블록이 정식 이력인지 네트워크가 &lt;strong>공동으로&lt;/strong> 결정하는 규칙&lt;/p>
&lt;ul>
&lt;li>PoW: 작업증명(연산 경쟁)&lt;/li>
&lt;li>PoS: 지분증명(검증자·보증금 기반)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="해시hash와-위변조-방지">해시(Hash)와 위·변조 방지&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>해시 함수(SHA-256, Keccak-256 등)&lt;/strong>: 입력을 고정 길이로 압축하는 일방향 함수임&lt;/p></description></item><item><title>재귀적 영지식 증명이란? (Recursion ZKP)</title><link>https://handsupmin.github.io/posts/recursion-zkp-basics-274b74/</link><pubDate>Sun, 21 Sep 2025 02:33:25 +0000</pubDate><guid>https://handsupmin.github.io/posts/recursion-zkp-basics-274b74/</guid><description>&lt;h3 id="개요">개요&lt;/h3>
&lt;p>재귀적 영지식 증명 Recursion ZKP 은 여러 개의 ZK 증명을 &lt;strong>계층적으로 합성&lt;/strong>해 &lt;strong>단일 증명&lt;/strong>으로 만드는 기법임
목적은 온체인 검증 횟수와 가스를 줄이고, L2 등에서 생성한 다수 증명을 하나로 압축해 &lt;strong>검증 비용을 상수 수준으로 수렴&lt;/strong>시키는 데 있음&lt;/p>
&lt;hr>
&lt;h3 id="왜-필요한가">왜 필요한가&lt;/h3>
&lt;ul>
&lt;li>트랜잭션 단위로 개별 증명을 온체인 검증하면 &lt;strong>검증 비용이 선형 증가&lt;/strong>함&lt;/li>
&lt;li>재귀를 쓰면 n개의 증명을 &lt;strong>트리 형태로 합성&lt;/strong>해 &lt;strong>한 번의 최종 검증&lt;/strong>으로 대체 가능함&lt;/li>
&lt;li>롤업·배치 처리·프라이버시 워크로드에서 &lt;strong>확장성&lt;/strong>과 &lt;strong>최종성 지연 단축&lt;/strong>을 동시에 노림&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="핵심-개념">핵심 개념&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>내부 증명 Inner proofs&lt;/strong>
원래 명제 트랜잭션, 상태 전이, 정책 검증 등에 대한 개별 ZK 증명 집합&lt;/p></description></item><item><title>머클트리(Merkle Tree)란? 머클트리의 개념과 블록체인에서의 역할</title><link>https://handsupmin.github.io/posts/merkle-tree-blockchain-role-274b74/</link><pubDate>Sat, 20 Sep 2025 17:15:26 +0000</pubDate><guid>https://handsupmin.github.io/posts/merkle-tree-blockchain-role-274b74/</guid><description>&lt;h3 id="개요">개요&lt;/h3>
&lt;p>머클트리는 블록체인에서 거래 집합을 &lt;strong>안전하고 효율적으로 요약·검증&lt;/strong>하기 위해 쓰이는 핵심 자료구조임
블록 헤더에 머클루트가 포함되는 이유는 블록 안의 모든 거래를 &lt;strong>고정 크기 해시 하나&lt;/strong>로 대표해 무결성 확인과 경량 검증을 가능하게 하기 때문임
이 글은 머클트리의 구조와 동작 원리, 블록체인에서의 실무적 의미와 구현 주의사항까지 초보자도 이해할 수 있도록 상세히 설명함&lt;/p>
&lt;hr>
&lt;h3 id="핵심-개념과-구조">핵심 개념과 구조&lt;/h3>
&lt;ul>
&lt;li>머클트리는 보통 &lt;strong>이진 트리&lt;/strong> 형태로 구현함&lt;/li>
&lt;li>거래들을 &lt;strong>리프(leaf)&lt;/strong> 로 두고 인접 두 리프의 해시를 이어 붙여 부모 해시를 만들며 이 과정을 반복해 &lt;strong>루트 해시&lt;/strong>를 얻음&lt;/li>
&lt;li>해시 함수는 체인별로 다르며 비트코인은 &lt;strong>더블 SHA‑256&lt;/strong>, 이더리움은 트라이 구조에서 &lt;strong>Keccak‑256&lt;/strong> 을 사용함&lt;/li>
&lt;li>최상단 해시를 &lt;strong>머클루트(Merkle root)&lt;/strong> 라 부르며 크기는 해시 함수에 따라 고정됨&lt;/li>
&lt;li>리프 수가 홀수일 때는 마지막 리프를 &lt;strong>복제해 짝을 맞추는 방식&lt;/strong>이 일반적이며 비트코인은 이 규칙을 사용함&lt;/li>
&lt;li>트리 깊이는 리프 수 N에 대해 &lt;strong>⌈log₂ N⌉&lt;/strong> 에 비례하므로 대량의 거래를 효율적으로 요약할 수 있음&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="동작-원리와-장점">동작 원리와 장점&lt;/h3>
&lt;ul>
&lt;li>인접 노드 해시 &lt;strong>H_left || H_right&lt;/strong> 를 순서대로 연결해 해시를 계산하고 이를 위로 올려가며 루트 해시를 얻음&lt;/li>
&lt;li>&lt;strong>무결성 검증&lt;/strong>
단일 거래가 바뀌면 해당 리프에서 루트까지의 모든 경로 해시가 바뀌어 변조를 즉시 탐지할 수 있음&lt;/li>
&lt;li>&lt;strong>효율적 포함 증명&lt;/strong>
특정 거래가 블록에 포함되었음을 증명하려면 그 거래와 경로상의 &lt;strong>형제 해시들만&lt;/strong> 있으면 됨
필요한 해시 개수는 &lt;strong>O(log N)&lt;/strong> 으로 작아 대역폭과 검증 비용이 작음&lt;/li>
&lt;li>&lt;strong>확장성 보조&lt;/strong>
리프가 1,000,000개여도 증명에 필요한 형제 해시는 약 20개 수준으로 32바이트 해시 기준 약 640바이트에 불과함&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="블록-헤더와-경량-노드spv">블록 헤더와 경량 노드(SPV)&lt;/h3>
&lt;ul>
&lt;li>비트코인 블록 헤더는 이전 블록 해시, 머클루트, 난스 등 합의 관련 메타데이터를 포함함&lt;/li>
&lt;li>경량 노드(SPV)는 &lt;strong>블록 전체가 아니라 헤더 체인만&lt;/strong> 받아 신뢰성을 확보하고, 개별 거래에 대해서는 풀노드로부터 &lt;strong>머클 증명&lt;/strong> 을 받아 포함 여부를 검증함&lt;/li>
&lt;li>이 방식은 모바일·임베디드 환경에서도 실사용이 가능하게 하는 기반이 됨&lt;/li>
&lt;li>이더리움은 전통적인 이진 머클트리 대신 &lt;strong>머클‑패트리샤 트라이(MPT)&lt;/strong> 를 사용해 거래·영수증·상태 루트를 헤더에 담아 유사한 목적을 달성함&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="구현-세부와-체인별-차이">구현 세부와 체인별 차이&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>비트코인&lt;/strong>&lt;/p></description></item><item><title>이더리움 PoS(Proof of Stake) 소개</title><link>https://handsupmin.github.io/posts/ethereum-pos-proof-of-stake-274b74/</link><pubDate>Sat, 20 Sep 2025 17:04:48 +0000</pubDate><guid>https://handsupmin.github.io/posts/ethereum-pos-proof-of-stake-274b74/</guid><description>&lt;h3 id="개요">개요&lt;/h3>
&lt;p>이 문서는 이더리움의 PoS 합의 구조와 구성 요소를 정리함
개념 정의에 그치지 않고 &lt;strong>운영 시 주의점&lt;/strong>, &lt;strong>보상·출금 흐름&lt;/strong>, &lt;strong>짧은 체인 재구성(Reorg) 원인과 완화책&lt;/strong>까지 다룸&lt;/p>
&lt;hr>
&lt;h3 id="개념과-배경">개념과 배경&lt;/h3>
&lt;p>PoS는 PoW의 에너지 경쟁을 대체해 &lt;strong>예치된 지분을 바탕으로 검증자를 선정&lt;/strong>하는 합의 메커니즘임
이더리움은 2022년 9월 더 머지 이후 PoS로 전환했고 전력 소비를 크게 줄이며 &lt;strong>검증자 기반 보안 모델&lt;/strong>로 이행함&lt;/p>
&lt;p>주요 속성 요약&lt;/p>
&lt;ul>
&lt;li>에너지 소비 대폭 축소&lt;/li>
&lt;li>스테이킹한 ETH 규모에 비례해 역할 참여 기회가 부여됨&lt;/li>
&lt;li>위반 시 슬래싱과 페널티로 예치금이 감소함&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="계층-분리와-beacon-chain의-역할">계층 분리와 Beacon Chain의 역할&lt;/h3>
&lt;p>이더리움은 &lt;strong>합의 계층(Beacon Chain)&lt;/strong> 과 &lt;strong>실행 계층(Execution Layer)&lt;/strong> 를 분리해 설계함&lt;/p></description></item><item><title>NFT란? NFT 핵심 개념 정리</title><link>https://handsupmin.github.io/posts/nft-concept-20gd0fl/</link><pubDate>Sat, 20 Sep 2025 16:41:07 +0000</pubDate><guid>https://handsupmin.github.io/posts/nft-concept-20gd0fl/</guid><description>&lt;h3 id="서문">서문&lt;/h3>
&lt;p>NFT는 몇 년 새 대중의 관심을 받았지만 개념과 절차가 분산돼 있어 입문자가 막히기 쉬움
이 글은 &lt;strong>실무자 관점&lt;/strong>에서 NFT의 핵심 개념을 단계적으로 정리하고 &lt;strong>구매·발행·보관 시 유의사항&lt;/strong>과 &lt;strong>운영 관행&lt;/strong>을 담는 것을 목표로 함&lt;/p>
&lt;hr>
&lt;h3 id="개념과-배경">개념과 배경&lt;/h3>
&lt;p>NFT는 Non‑Fungible Token의 약자이며 대체 불가능한 토큰을 의미함
동일 단위끼리 교환 가능한 자산은 펀저블 토큰이라 부르고 NFT는 각 토큰이 &lt;strong>고유 식별자와 속성&lt;/strong>을 가져 상호 교환 시 동일 가치를 보장하지 않음
블록체인에 기록된 소유권은 변경이 어렵고 거래 이력이 투명하게 남는다는 장점이 있음
온체인 소유권이 &lt;strong>저작권·초상권 등 법적 권리와 자동 동치가 아님&lt;/strong>에 유의해야 함&lt;/p></description></item></channel></rss>